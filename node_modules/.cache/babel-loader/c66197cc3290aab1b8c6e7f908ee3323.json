{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk'; // REDUCERS\n\nexport function login() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SAMPLE_ACTION':\n      {\n        console.log(\"there\");\n        return [].concat(_toConsumableArray(state), [{\n          id: action.id,\n          text: action.text,\n          completed: false\n        }]);\n      }\n\n    default:\n      return state;\n  }\n} // ACTIONS\n\nexport function sampleAction(text) {\n  return {\n    type: 'SAMPLE_ACTION',\n    text: text\n  };\n}\nexport function initializeStore(initialState) {\n  return createStore(login, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n}","map":{"version":3,"sources":["C:\\Projects\\room-reservation\\with-redux-app\\store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","login","state","action","type","console","log","id","text","completed","sampleAction","initializeStore","initialState"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAGA;;AACA,OAAO,SAASC,KAAT,GAAoC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAqB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACF,4CACKJ,KADL,IAEE;AACEK,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EADb;AAEEC,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAFf;AAGEC,UAAAA,SAAS,EAAE;AAHb,SAFF;AAOE;;AAEH;AACC,aAAOP,KAAP;AAbJ;AAeD,C,CAED;;AAEA,OAAO,SAASQ,YAAT,CAAsBF,IAAtB,EAA4B;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAE,eADD;AAELI,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASG,eAAT,CAA0BC,YAA1B,EAAwC;AAC7C,SAAOf,WAAW,CAChBI,KADgB,EAEhBF,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAFH,CAAlB;AAID","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\n\n// REDUCERS\nexport function login (state = [], action) {\n  switch (action.type) {\n    case 'SAMPLE_ACTION':{\n        console.log(\"there\");\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ]}\n\n     default:\n      return state\n  }\n}\n\n// ACTIONS\n\nexport function sampleAction(text) {\n  return {\n    type: 'SAMPLE_ACTION',\n    text\n  }\n}\n\nexport function initializeStore (initialState) {\n  return createStore(\n    login,\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}