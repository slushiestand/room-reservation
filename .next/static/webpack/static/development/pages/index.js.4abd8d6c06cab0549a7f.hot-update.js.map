{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4abd8d6c06cab0549a7f.hot-update.js","sources":["webpack:///./components/home.js"],"sourcesContent":["import { connect } from 'react-redux'\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Room1 from './room1'\nimport Room from './room'\nimport { check2, check3, check4, uncheck, uncheck4, submit } from '../actions'\n\nconst PageContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n`\n\nconst RoomContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst Submit = styled.button`\n  background-color: #C0C0C0;\n  height: 30px;\n  width: 60px;\n  margin-left: 25px;\n  margin-top: 25px;\n`\n\nclass Home extends Component {\n  handleClickBox2 = () => {\n    //check if Room 3 or Room 4 is checked, if they are, a click on Room 2 should uncheck Rooms 3 and 4, if not\n    //a click should check Room 2\n    if(this.props.theState.check3 === true || this.props.theState.check4 === true) {\n      this.props.uncheckBoxes()\n    }\n    else this.props.checkBox2()\n  }\n\n  handleClickBox3 = () => {\n    //check if Room 4 is checked, if yes, a click on Room 3 should uncheck Room 4, if not\n    //a click should check Room 3\n    if(this.props.theState.check4 == true ) {\n      this.props.uncheckBox4()\n    }\n    else this.props.checkBox3()\n  }\n\n\n  handleSubmit = () => {\n    this.props.submitForm(this.props.theState)\n  }\nrender() {\n  const theState = this.props.theState\n  return (\n    <div>\n    <PageContainer>\n      <RoomContainer>\n        <Room1 room={1}/>\n        <Room \n          room={2} \n          handleClick={this.handleClickBox2} \n          checked={theState.check2}\n\n        />\n        <Room \n          room={3} \n          handleClick={this.handleClickBox3} \n          checked={theState.check3}\n  \n        />\n        <Room \n          room={4} \n          handleClick={this.props.checkBox4} \n          checked={theState.check4}\n\n        />\n      </RoomContainer>  \n      <Submit onClick={this.handleSubmit}> Submit </Submit>\n    </PageContainer>\n    \n    </div>\n\n\n  )\n}\n}\n\nconst mapStateToProps = (state) => ({\n  theState : state.check\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  uncheckBoxes: () => {dispatch(uncheck())},\n  uncheckBox4: () => {dispatch(uncheck4())},\n  checkBox2: () => {dispatch(check2())},\n  checkBox3: () => {dispatch(check3())},\n  checkBox4: () => {dispatch(check4())},\n  submitForm: (theState) => {dispatch(submit(theState))}\n\n})\n\n//set initial state of app by pull from reducer like suggested here: https://stackoverflow.com/questions/52479422/keep-redux-form-values-after-page-reload-without-submit-form\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(Home)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAxDA;AACA;AA0DA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAAA;AACA;AACA;AASA;;;;A","sourceRoot":""}